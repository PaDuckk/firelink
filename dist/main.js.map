{"version":3,"sources":["helpers/worker.ts","helpers/args-extractors.ts","helpers/firebase-package-symlink.ts","main.ts"],"names":[],"mappings":"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","file":"main.js","sourceRoot":"../src","sourcesContent":["import { spawn } from 'child_process';\ntype WorkerOptions = {\n  command: string;\n  args?: string[];\n  cwd?: string;\n};\nexport const Worker = (\n  { command, args, cwd }: WorkerOptions = {\n    command: 'npx',\n\n    args: []\n  },\n  log: boolean = true\n) => {\n  return new Promise((resolve, reject) => {\n    const child = spawn(command, args, { cwd });\n\n    if (log) {\n      child.stderr.pipe(process.stderr);\n    }\n    if (log) {\n      child.stdout.pipe(process.stdout);\n    }\n    child.on('close', (code: number) => {\n      if (code !== 0) {\n        return reject(!!code);\n      }\n      return resolve(!!code);\n    });\n  });\n};\n","export const includes = (i: '--buildCommand') => process.argv.toString().includes(i);\nexport const nextOrDefault = (\n  i: '--buildCommand',\n  fb: any = true,\n  type = (p: string) => p\n) => {\n  if (process.argv.toString().includes(i)) {\n    const isNextArgumentPresent = process.argv[process.argv.indexOf(i) + 1];\n    if (!isNextArgumentPresent) {\n      return fb;\n    }\n    if (isNextArgumentPresent.includes('--')) {\n      return fb;\n    }\n    return type(isNextArgumentPresent);\n  }\n  return fb;\n};\n","import { Worker } from './worker';\nimport { readdir, readFile, writeFile, writeFileSync } from 'fs';\nimport { promisify } from 'util';\nimport { join } from 'path';\nimport { includes, nextOrDefault } from './args-extractors';\nconst linkedPackagesName = 'linkedPackages';\nexport async function createFirebasePackageSymlink() {\n  const packageJson: {\n    dependencies: { [key: string]: string };\n    linkedDependencies: { [key: string]: string };\n  } = JSON.parse(\n    await promisify(readFile)(join(process.cwd(), 'package.json'), {\n      encoding: 'utf-8'\n    })\n  );\n  const originalPackageJson = JSON.parse(JSON.stringify(packageJson));\n  if (packageJson && packageJson.linkedDependencies) {\n    const linkedDepndencies = packageJson.linkedDependencies;\n    const dependencies = Object.keys(linkedDepndencies).map(dep => ({\n      dep,\n      folder: linkedDepndencies[dep]\n    }));\n    async function modifyJson() {\n      await Promise.all(\n        dependencies.map(async ({ dep }) => {\n          packageJson.dependencies[dep] = `file:./${linkedPackagesName}/${\n            dep.split('/')[1]\n          }`;\n        })\n      );\n      await promisify(writeFile)(\n        './package.json',\n        JSON.stringify(packageJson, null, 2),\n        { encoding: 'utf-8' }\n      );\n    }\n    await modifyJson();\n    await Promise.all(\n      dependencies.map(async ({ folder }) => {\n        const args = [\n          '-r',\n          '--exclude',\n          'node_modules',\n          '--exclude',\n          'dist',\n          '--exclude',\n          '.cache',\n          folder,\n          `./${linkedPackagesName}`\n        ];\n        await Worker({\n          command: 'rsync',\n          args\n        });\n      })\n    );\n\n    function revertJson() {\n      writeFileSync(\n        join(process.cwd(), 'package.json'),\n        JSON.stringify(originalPackageJson, null, 2),\n        { encoding: 'utf-8' }\n      );\n    }\n    function exitHandler() {\n      revertJson();\n      process.exit();\n    }\n    try {\n      try {\n        if (includes('--buildCommand')) {\n          await Promise.all(\n            (await promisify(readdir)(\n              join(process.cwd(), linkedPackagesName)\n            )).map(async dir => {\n              await Worker(\n                {\n                  command: 'npx',\n                  args: [nextOrDefault('--buildCommand', 'tsc')],\n                  cwd: join(process.cwd(), linkedPackagesName, dir)\n                },\n                false\n              );\n            })\n          );\n        }\n      } catch (e) {}\n      process.stdin.resume();\n      process.on('exit', exitHandler);\n      process.on('SIGINT', exitHandler);\n      process.on('SIGUSR1', exitHandler);\n      process.on('SIGUSR2', exitHandler);\n      process.on('uncaughtException', exitHandler);\n      await Worker({\n        command: 'npx',\n        args: ['firebase', ...process.argv.slice(2)]\n      });\n    } catch (e) {\n      console.log(e);\n      exitHandler();\n    }\n  }\n}\n","import { createFirebasePackageSymlink } from './helpers/firebase-package-symlink';\nasync function Main() {\n  await createFirebasePackageSymlink();\n}\n\nMain();\n"]}